// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	eventbus "github.com/sangianpatrick/go-kafka-dlq-demo/dlq-service/eventbus"
	mock "github.com/stretchr/testify/mock"
)

// Publisher is an autogenerated mock type for the Publisher type
type Publisher struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Publisher) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: ctx, topic, key, headers, message
func (_m *Publisher) Send(ctx context.Context, topic string, key string, headers eventbus.MessageHeaders, message []byte) error {
	ret := _m.Called(ctx, topic, key, headers, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, eventbus.MessageHeaders, []byte) error); ok {
		r0 = rf(ctx, topic, key, headers, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
